!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDRESS	hydra/app.py	/^ADDRESS = ("localhost", 5555)$/;"	v
ADDRESS	test/HandleClientMessageTest.py	/^ADDRESS = ('localhost', 5555)$/;"	v
ADD_INSTRUMENT_CLIENT	hydra/client_manager.py	/^ADD_INSTRUMENT_CLIENT = 2$/;"	v
CHANGE_INSTRUMENT_CLIENT	hydra/client_manager.py	/^CHANGE_INSTRUMENT_CLIENT = 4$/;"	v
CLIENT_CHECK_CONNECTION	hydra/client_manager.py	/^CLIENT_CHECK_CONNECTION = 3$/;"	v
CLIENT_CONNECT	hydra/client_manager.py	/^CLIENT_CONNECT = 1$/;"	v
CLIENT_DISCONNECT	hydra/client_manager.py	/^CLIENT_DISCONNECT = 2$/;"	v
CLIENT_INSTRUMENT_MESSAGE	hydra/client_manager.py	/^CLIENT_INSTRUMENT_MESSAGE = 4$/;"	v
ClientSimulator	test/HandleClientMessageTest.py	/^class ClientSimulator(socketserver.UDPServer):$/;"	c
CommandAddInstrument	hydra/commands.py	/^class CommandAddInstrument():$/;"	c
CommandChangeClient	hydra/commands.py	/^class CommandChangeClient():$/;"	c
CommandChangeScene	hydra/commands.py	/^class CommandChangeScene():$/;"	c
CommandRemoveInstrument	hydra/commands.py	/^class CommandRemoveInstrument():$/;"	c
CommandUpdateClients	hydra/commands.py	/^class CommandUpdateClients():$/;"	c
CommandUpdateInstrument	hydra/commands.py	/^class CommandUpdateInstrument():$/;"	c
ConcentricCircleScene	hydra/midi_handler.py	/^class ConcentricCircleScene(Scene):$/;"	c
FountainScene	hydra/midi_handler.py	/^class FountainScene(Scene):$/;"	c
HandleClientMessageTest	test/HandleClientMessageTest.py	/^class HandleClientMessageTest(unittest.TestCase):$/;"	c
HydraProtocol	hydra/hyas.py	/^class HydraProtocol(asyncio.DatagramProtocol):$/;"	c
Instrument	hydra/midi_handler.py	/^class Instrument(Scene):$/;"	c
InstrumentFountainScene	hydra/midi_handler.py	/^class InstrumentFountainScene(Instrument):$/;"	c
InstrumentKeysScene	hydra/midi_handler.py	/^class InstrumentKeysScene(Instrument):$/;"	c
InstrumentMapping	hydra/client_manager.py	/^class InstrumentMapping():$/;"	c
MIDI_FREQUENCY	hydra/hyas.py	/^MIDI_FREQUENCY = 15$/;"	v
MidiHandler	hydra/midi_handler.py	/^class MidiHandler(object):$/;"	c
MyServer	hydra/app.py	/^class MyServer(socketserver.UDPServer):$/;"	c
NOTE_OFF	hydra/midi_handler.py	/^NOTE_OFF = 8$/;"	v
NOTE_ON	hydra/midi_handler.py	/^NOTE_ON = 9$/;"	v
NetworkTest	test/networktests.py	/^class NetworkTest(unittest.TestCase):$/;"	c
NotActiveScene	hydra/midi_handler.py	/^class NotActiveScene(Scene):$/;"	c
PITCH_BEND	hydra/midi_handler.py	/^PITCH_BEND = 14$/;"	v
REMOVE_INSTRUMENT_CLIENT	hydra/client_manager.py	/^REMOVE_INSTRUMENT_CLIENT = 3$/;"	v
SERVER_ACTIVATE_CLIENT	hydra/commands.py	/^SERVER_ACTIVATE_CLIENT = 5$/;"	v
SERVER_CHANGE_SCENE	hydra/commands.py	/^SERVER_CHANGE_SCENE = 4$/;"	v
SERVER_CONFIRM_CONNECT	hydra/commands.py	/^SERVER_CONFIRM_CONNECT = 1$/;"	v
SERVER_CONFIRM_DISCONNECT	hydra/commands.py	/^SERVER_CONFIRM_DISCONNECT = 2$/;"	v
SERVER_REMOVE_CLIENT	hydra/commands.py	/^SERVER_REMOVE_CLIENT = 6$/;"	v
SERVER_SCENE_UPDATE	hydra/commands.py	/^SERVER_SCENE_UPDATE = 3$/;"	v
SERVER_UPDATE_INSTRUMENT	hydra/commands.py	/^SERVER_UPDATE_INSTRUMENT = 7$/;"	v
Scene	hydra/midi_handler.py	/^class Scene(object):$/;"	c
UDPRequestHandler	hydra/app.py	/^                        socketserver.DatagramRequestHandler):$/;"	c
UDPRequestHandler	test/HandleClientMessageTest.py	/^                        socketserver.DatagramRequestHandler):$/;"	c
UPDATE_ALL_CLIENTS	hydra/client_manager.py	/^UPDATE_ALL_CLIENTS = 1$/;"	v
UPDATE_INSTRUMENT_CLIENT	hydra/client_manager.py	/^UPDATE_INSTRUMENT_CLIENT = 5$/;"	v
__author__	hydra/__init__.py	/^__author__ = 'Jason Manning'$/;"	v
__author__	hydra/midi_handler.py	/^__author__ = 'Jason'$/;"	v
__author__	test/HandleClientMessageTest.py	/^__author__ = 'Jason'$/;"	v
__author__	test/networktests.py	/^__author__ = 'manno23'$/;"	v
__init__	hydra/app.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:MyServer
__init__	hydra/client_manager.py	/^    def __init__(self):$/;"	m	class:InstrumentMapping
__init__	hydra/commands.py	/^    def __init__(self, channel, current_scene_id, initialising_state):$/;"	m	class:CommandChangeClient
__init__	hydra/commands.py	/^    def __init__(self, channel, current_scene_id, initialising_state):$/;"	m	class:CommandRemoveInstrument
__init__	hydra/commands.py	/^    def __init__(self, channel, initialising_state):$/;"	m	class:CommandAddInstrument
__init__	hydra/commands.py	/^    def __init__(self, channel, instrument_update_message):$/;"	m	class:CommandUpdateInstrument
__init__	hydra/commands.py	/^    def __init__(self, message):$/;"	m	class:CommandUpdateClients
__init__	hydra/commands.py	/^    def __init__(self, scene_id, initialisation_msg):$/;"	m	class:CommandChangeScene
__init__	hydra/midi_handler.py	/^    def __init__(self):$/;"	m	class:MidiHandler
__init__	hydra/midi_handler.py	/^    def __init__(self, instrument_id, midi_output):$/;"	m	class:Instrument
__init__	hydra/midi_handler.py	/^    def __init__(self, instrument_id, midi_output):$/;"	m	class:InstrumentFountainScene
__init__	hydra/midi_handler.py	/^    def __init__(self, instrument_id, midi_output):$/;"	m	class:InstrumentKeysScene
__init__	hydra/midi_handler.py	/^    def __init__(self, scene_id):$/;"	m	class:ConcentricCircleScene
__init__	hydra/midi_handler.py	/^    def __init__(self, scene_id):$/;"	m	class:FountainScene
__init__	hydra/midi_handler.py	/^    def __init__(self, scene_id):$/;"	m	class:Scene
__init__	test/HandleClientMessageTest.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:ClientSimulator
__version__	hydra/__init__.py	/^__version__ = '0.1'$/;"	v
add	hydra/client_manager.py	/^    def add(self, client_id, channel):$/;"	m	class:InstrumentMapping
available_clients	hydra/client_manager.py	/^available_clients = []$/;"	v
change_scene	hydra/midi_handler.py	/^    def change_scene(self, scene_id):$/;"	m	class:MidiHandler
check_queue	hydra/hyas.py	/^def check_queue(input_socket):$/;"	f
client	hydra/client_manager.py	/^client = namedtuple('client', ['id', 'address', ])$/;"	v
client	test/networktests.py	/^        def client():$/;"	f	function:NetworkTest.setUp
client_list	hydra/client_manager.py	/^client_list = {}$/;"	v
close	hydra/app.py	/^def close():$/;"	f
close	hydra/client_manager.py	/^def close():$/;"	f
connection_lost	hydra/hyas.py	/^    def connection_lost(self):$/;"	m	class:HydraProtocol
connection_made	hydra/hyas.py	/^    def connection_made(self, transport):$/;"	m	class:HydraProtocol
datagram_received	hydra/hyas.py	/^    def datagram_received(self, data, addr):$/;"	m	class:HydraProtocol
error_received	hydra/hyas.py	/^    def error_received(self, exc):$/;"	m	class:HydraProtocol
get_channel	hydra/client_manager.py	/^    def get_channel(self, client_id):$/;"	m	class:InstrumentMapping
get_client_id	hydra/client_manager.py	/^    def get_client_id(self, channel):$/;"	m	class:InstrumentMapping
get_instrument_state	hydra/midi_handler.py	/^    def get_instrument_state(self, channel):$/;"	m	class:MidiHandler
handle	hydra/app.py	/^    def handle(self):$/;"	m	class:UDPRequestHandler
handle	test/HandleClientMessageTest.py	/^    def handle(self):$/;"	m	class:UDPRequestHandler
handle_message	hydra/client_manager.py	/^def handle_message(midi_handler, message):$/;"	f
handle_message	hydra/midi_handler.py	/^    def handle_message(self, channel, data):$/;"	m	class:MidiHandler
handle_message	hydra/midi_handler.py	/^    def handle_message(self, data, channel):$/;"	m	class:Instrument
handle_message	hydra/midi_handler.py	/^    def handle_message(self, data, channel):$/;"	m	class:InstrumentFountainScene
handle_message	hydra/midi_handler.py	/^    def handle_message(self, data, channel):$/;"	m	class:InstrumentKeysScene
handle_midi	hydra/client_manager.py	/^def handle_midi(midi_handler):$/;"	f
handle_midi	hydra/midi_handler.py	/^    def handle_midi(self, msg_type, channel, data1, data2, data3):$/;"	m	class:ConcentricCircleScene
handle_midi	hydra/midi_handler.py	/^    def handle_midi(self, msg_type, channel, data1, data2, data3):$/;"	m	class:FountainScene
handle_midi	hydra/midi_handler.py	/^    def handle_midi(self, msg_type, channel, data1, data2, data3):$/;"	m	class:InstrumentFountainScene
handle_midi	hydra/midi_handler.py	/^    def handle_midi(self, msg_type, channel, data1, data2, data3):$/;"	m	class:InstrumentKeysScene
handle_midi	hydra/midi_handler.py	/^    def handle_midi(self, msg_type, channel, data1, data2, data3):$/;"	m	class:NotActiveScene
handle_midi	hydra/midi_handler.py	/^    def handle_midi(self, msg_type, channel, data1, data2, data3):$/;"	m	class:Scene
init	hydra/client_manager.py	/^def init():$/;"	f
initial_message	hydra/midi_handler.py	/^    def initial_message(self):$/;"	m	class:InstrumentFountainScene
initial_message	hydra/midi_handler.py	/^    def initial_message(self):$/;"	m	class:InstrumentKeysScene
instrument_map	hydra/client_manager.py	/^instrument_map = InstrumentMapping()$/;"	v
instrument_packet	hydra/midi_handler.py	/^    def instrument_packet(self, msg_type, channel, data1, data2, data3):$/;"	m	class:MidiHandler
log	hydra/client_manager.py	/^log = logging.getLogger('Hydra')$/;"	v
log	hydra/midi_handler.py	/^log = logging.getLogger('Hydra')$/;"	v
log	test/HandleClientMessageTest.py	/^log = logging.getLogger('Hydra')$/;"	v
msg_queue	hydra/app.py	/^msg_queue = queue.Queue()$/;"	v
new_instrument	hydra/midi_handler.py	/^    def new_instrument(self, instrument_type):$/;"	m	class:MidiHandler
on_packets_available	test/networktests.py	/^        def on_packets_available(data):$/;"	f	function:NetworkTest.setUp
pause_writing	hydra/hyas.py	/^    def pause_writing(self):$/;"	m	class:HydraProtocol
poll_midi_events	hydra/midi_handler.py	/^    def poll_midi_events(self):$/;"	m	class:MidiHandler
remove_channel	hydra/client_manager.py	/^    def remove_channel(self, channel):$/;"	m	class:InstrumentMapping
remove_client_id	hydra/client_manager.py	/^    def remove_client_id(self, client_id):$/;"	m	class:InstrumentMapping
resume_writing	hydra/hyas.py	/^    def resume_writing(self):$/;"	m	class:HydraProtocol
run	hydra/app.py	/^def run():$/;"	f
run	hydra/hyas.py	/^def run():$/;"	f
scene_packet	hydra/midi_handler.py	/^    def scene_packet(self, msg_type, channel, data1, data2, data3):$/;"	m	class:MidiHandler
scene_state	hydra/midi_handler.py	/^    def scene_state(self):$/;"	m	class:MidiHandler
scene_state_message	hydra/midi_handler.py	/^    def scene_state_message(self):$/;"	f
scene_state_message	hydra/midi_handler.py	/^    def scene_state_message(self):$/;"	m	class:ConcentricCircleScene
scene_state_message	hydra/midi_handler.py	/^    def scene_state_message(self):$/;"	m	class:FountainScene
scene_state_message	hydra/midi_handler.py	/^    def scene_state_message(self):$/;"	m	class:NotActiveScene
server	hydra/app.py	/^server = MyServer(ADDRESS, UDPRequestHandler, msg_queue)$/;"	v
setUp	test/HandleClientMessageTest.py	/^    def setUp(self):$/;"	m	class:HandleClientMessageTest
setUp	test/networktests.py	/^    def setUp(self):$/;"	m	class:NetworkTest
stop	hydra/hyas.py	/^def stop():$/;"	f
tearDown	test/HandleClientMessageTest.py	/^    def tearDown(self):$/;"	m	class:HandleClientMessageTest
test_activating_a_client	test/HandleClientMessageTest.py	/^    def test_activating_a_client(self):$/;"	m	class:HandleClientMessageTest
test_handling_client_connection_message	test/HandleClientMessageTest.py	/^    def test_handling_client_connection_message(self):$/;"	m	class:HandleClientMessageTest
test_instrument_note_definition	test/HandleClientMessageTest.py	/^    def test_instrument_note_definition(self):$/;"	m	class:HandleClientMessageTest
test_midi_kick_event_response	test/HandleClientMessageTest.py	/^    def test_midi_kick_event_response(self):$/;"	m	class:HandleClientMessageTest
test_removing_active_client	test/HandleClientMessageTest.py	/^    def test_removing_active_client(self):$/;"	m	class:HandleClientMessageTest
